{"ast":null,"code":"var _jsxFileName = \"/home/jordan/projects/djangoreactshop-main/src/containers/Profile.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table } from \"semantic-ui-react\";\nimport { countryListURL, addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL, paymentListURL, userDetailsURL } from \"../constants\";\nimport { authAxios } from \"../utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass UserDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      saving: false,\n      success: false,\n      userData: {},\n      userVK: {}\n    };\n\n    this.handleFetchUserDetails = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(userDetailsURL).then(res => {\n        this.setState({\n          loading: false,\n          userData: res.data.user,\n          userVK: res.data.vk\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        userData\n      } = this.state;\n      const updatedData = { ...userData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        userData: updatedData\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      const {\n        userData\n      } = this.state;\n      e.preventDefault();\n      let data = {};\n      authAxios.put(userDetailsURL, { ...userData\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchUserDetails();\n  }\n\n  render() {\n    var _userVK$country, _userVK$city;\n\n    const {\n      userData,\n      userVK,\n      success,\n      error,\n      loading,\n      saving\n    } = this.state;\n\n    if (!userData) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"first_name\",\n      placeholder: \"First name\",\n      value: userData.first_name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"last_name\",\n      placeholder: \"Last name\",\n      value: userData.last_name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Save\")), /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      colSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }\n    }, \"VK profile\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, userVK.first_name)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, userVK.last_name)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, (_userVK$country = userVK.country) === null || _userVK$country === void 0 ? void 0 : _userVK$country.title)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, (_userVK$city = userVK.city) === null || _userVK$city === void 0 ? void 0 : _userVK$city.title)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"Nickname\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, userVK.nickname)), /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, \"Photo\"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: userVK.photo_medium,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }))))));\n  }\n\n}\n\nclass PaymentHistory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      payments: []\n    };\n\n    this.handleFetchPayments = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(paymentListURL).then(res => {\n        this.setState({\n          loading: false,\n          payments: res.data\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchPayments();\n  }\n\n  render() {\n    const {\n      payments\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, \"Date\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, payments.map(p => {\n      return /*#__PURE__*/React.createElement(Table.Row, {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, p.id), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, \"$\", p.amount), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, new Date(p.timestamp).toUTCString()));\n    })));\n  }\n\n}\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        address_type: \"\",\n        apartment_address: \"\",\n        country: \"\",\n        default: false,\n        id: \"\",\n        street_address: \"\",\n        user: 1,\n        zip: \"\"\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"street_address\",\n      placeholder: \"Street address\",\n      onChange: this.handleChange,\n      value: formData.street_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"apartment_address\",\n      placeholder: \"Apartment address\",\n      onChange: this.handleChange,\n      value: formData.apartment_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      loading: countries.length < 1,\n      fluid: true,\n      clearable: true,\n      search: true,\n      options: countries,\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: this.handleSelectChange,\n      value: formData.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"zip\",\n      placeholder: \"Zip code\",\n      onChange: this.handleChange,\n      value: formData.zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"userDetails\",\n      addresses: [],\n      countries: [],\n      userID: null,\n      selectedAddress: null,\n      userDetails: {}\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"billingAddress\") {\n        return \"Billing Address\";\n      } else if (activeItem === \"shippingAddress\") {\n        return \"Shipping Address\";\n      } else if (activeItem === \"userDetails\") {\n        return \"Profile\";\n      }\n\n      return \"Payment History\";\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n      this.setState({\n        selectedAddress: null\n      });\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        countries,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 9\n        }\n      }, addresses.map(a => {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: a.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 17\n          }\n        }, a.default && /*#__PURE__*/React.createElement(Label, {\n          as: \"a\",\n          color: \"blue\",\n          ribbon: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 21\n          }\n        }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 19\n          }\n        }, a.street_address, \", \", a.apartment_address), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 19\n          }\n        }, a.country), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 19\n          }\n        }, a.zip)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"yellow\",\n          onClick: () => this.handleSelectAddress(a),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 19\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          color: \"red\",\n          onClick: () => this.handleDeleteAddress(a.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 19\n          }\n        }, \"Delete\")));\n      })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 33\n        }\n      }) : null, selectedAddress === null ? /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        countries: countries,\n        formType: CREATE_FORM,\n        userID: userID,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }\n      }) : null, selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        userID: userID,\n        countries: countries,\n        address: selectedAddress,\n        formType: UPDATE_FORM,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props;\n\n    if (!isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 15\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 19\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Profile\",\n      active: activeItem === \"userDetails\",\n      onClick: () => this.handleItemClick(\"userDetails\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: () => this.handleItemClick(\"billingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Payment history\",\n      active: activeItem === \"paymentHistory\",\n      onClick: () => this.handleItemClick(\"paymentHistory\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 13\n      }\n    }, this.handleGetActiveItem()), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 13\n      }\n    }), activeItem === \"paymentHistory\" ? /*#__PURE__*/React.createElement(PaymentHistory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 15\n      }\n    }) : activeItem === \"userDetails\" ? /*#__PURE__*/React.createElement(UserDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 15\n      }\n    }) : this.renderAddresses())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/home/jordan/projects/djangoreactshop-main/src/containers/Profile.js"],"names":["React","connect","Redirect","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","countryListURL","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","paymentListURL","userDetailsURL","authAxios","UPDATE_FORM","CREATE_FORM","UserDetails","Component","state","error","loading","saving","success","userData","userVK","handleFetchUserDetails","setState","get","then","res","data","user","vk","catch","err","handleChange","e","updatedData","target","name","value","handleSubmit","preventDefault","put","props","callback","componentDidMount","render","first_name","last_name","country","title","city","nickname","photo_medium","PaymentHistory","payments","handleFetchPayments","map","p","id","amount","Date","timestamp","toUTCString","AddressForm","formData","address_type","apartment_address","default","street_address","zip","handleToggleDefault","updatedFormdata","handleSelectChange","formType","handleUpdateAddress","handleCreateAddress","userID","activeItem","post","address","countries","length","JSON","stringify","Profile","addresses","selectedAddress","userDetails","handleItemClick","handleFetchAddresses","handleGetActiveItem","handleFormatCountries","keys","Object","k","key","text","handleDeleteAddress","addressID","delete","handleCallback","handleSelectAddress","handleFetchUserID","handleFetchCountries","renderAddresses","a","isAuthenticated","mapStateToProps","auth","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Label,\n  Loader,\n  Menu,\n  Message,\n  Segment,\n  Select,\n  Table\n} from \"semantic-ui-react\";\nimport {\n  countryListURL,\n  addressListURL,\n  addressCreateURL,\n  addressUpdateURL,\n  addressDeleteURL,\n  userIDURL,\n  paymentListURL,\n  userDetailsURL\n} from \"../constants\";\nimport { authAxios } from \"../utils\";\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\n\nclass UserDetails extends React.Component {\n  state = {\n    error: null,\n    loading: false,\n    saving: false,\n    success: false,\n    userData: {},\n    userVK: {},\n  };\n\n  componentDidMount() {\n    this.handleFetchUserDetails();\n  }\n\n  handleFetchUserDetails = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(userDetailsURL)\n      .then(res => {\n        this.setState({\n          loading: false,\n          userData: res.data.user,\n          userVK: res.data.vk\n        });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  handleChange = e => {\n    const { userData } = this.state;\n    const updatedData = {\n      ...userData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      userData: updatedData\n    });\n  };\n\n  handleSubmit = e => {\n    this.setState({ saving: true });\n    const { userData } = this.state;\n    e.preventDefault();\n    let data = {\n\n    };\n    authAxios\n      .put(userDetailsURL, {\n        ...userData,\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  render() {\n    const { userData, userVK, success, error, loading, saving } = this.state;\n    if(!userData){\n        return (\n          <div></div>\n        )\n    }\n    return (\n      <React.Fragment>\n        <Form onSubmit={this.handleSubmit} success={success} error={error}>\n        <Form.Input\n          required\n          name=\"first_name\"\n          placeholder=\"First name\"\n          value={userData.first_name}\n          onChange={this.handleChange}\n        />\n        <Form.Input\n          required\n          name=\"last_name\"\n          placeholder=\"Last name\"\n          value={userData.last_name}\n          onChange={this.handleChange}\n        />\n        <Form.Button disabled={saving} loading={saving} primary>\n          Save\n        </Form.Button>\n        </Form>\n      <Table celled>\n        <Table.Header>\n          <Table.Row><Table.HeaderCell colSpan=\"2\">VK profile</Table.HeaderCell></Table.Row>\n        </Table.Header>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>First Name</Table.Cell>\n            <Table.Cell>{userVK.first_name}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Last Name</Table.Cell>\n            <Table.Cell>{userVK.last_name}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Country</Table.Cell>\n            <Table.Cell>{userVK.country?.title}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>City</Table.Cell>\n            <Table.Cell>{userVK.city?.title}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Nickname</Table.Cell>\n            <Table.Cell>{userVK.nickname}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Photo</Table.Cell>\n            <Table.Cell><Image src={userVK.photo_medium}/></Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nclass PaymentHistory extends React.Component {\n  state = {\n    payments: []\n  };\n\n  componentDidMount() {\n    this.handleFetchPayments();\n  }\n\n  handleFetchPayments = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(paymentListURL)\n      .then(res => {\n        this.setState({\n          loading: false,\n          payments: res.data\n        });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  render() {\n    const { payments } = this.state;\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>ID</Table.HeaderCell>\n            <Table.HeaderCell>Amount</Table.HeaderCell>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {payments.map(p => {\n            return (\n              <Table.Row key={p.id}>\n                <Table.Cell>{p.id}</Table.Cell>\n                <Table.Cell>${p.amount}</Table.Cell>\n                <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\n\nclass AddressForm extends React.Component {\n  state = {\n    error: null,\n    loading: false,\n    formData: {\n      address_type: \"\",\n      apartment_address: \"\",\n      country: \"\",\n      default: false,\n      id: \"\",\n      street_address: \"\",\n      user: 1,\n      zip: \"\"\n    },\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const { address, formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.setState({ formData: address });\n    }\n  }\n\n  handleToggleDefault = () => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      default: !formData.default\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChange = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSelectChange = (e, { name, value }) => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSubmit = e => {\n    this.setState({ saving: true });\n    e.preventDefault();\n    const { formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.handleUpdateAddress();\n    } else {\n      this.handleCreateAddress();\n    }\n  };\n\n  handleCreateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .post(addressCreateURL, {\n        ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleUpdateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .put(addressUpdateURL(formData.id), {\n        ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  render() {\n    const { countries } = this.props;\n    const { error, formData, success, saving } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit} success={success} error={error}>\n        <Form.Input\n          required\n          name=\"street_address\"\n          placeholder=\"Street address\"\n          onChange={this.handleChange}\n          value={formData.street_address}\n        />\n        <Form.Input\n          required\n          name=\"apartment_address\"\n          placeholder=\"Apartment address\"\n          onChange={this.handleChange}\n          value={formData.apartment_address}\n        />\n        <Form.Field required>\n          <Select\n            loading={countries.length < 1}\n            fluid\n            clearable\n            search\n            options={countries}\n            name=\"country\"\n            placeholder=\"Country\"\n            onChange={this.handleSelectChange}\n            value={formData.country}\n          />\n        </Form.Field>\n        <Form.Input\n          required\n          name=\"zip\"\n          placeholder=\"Zip code\"\n          onChange={this.handleChange}\n          value={formData.zip}\n        />\n        <Form.Checkbox\n          name=\"default\"\n          label=\"Make this the default address?\"\n          onChange={this.handleToggleDefault}\n          checked={formData.default}\n        />\n        {success && (\n          <Message success header=\"Success!\" content=\"Your address was saved\" />\n        )}\n        {error && (\n          <Message\n            error\n            header=\"There was an error\"\n            content={JSON.stringify(error)}\n          />\n        )}\n        <Form.Button disabled={saving} loading={saving} primary>\n          Save\n        </Form.Button>\n      </Form>\n    );\n  }\n}\n\nclass Profile extends React.Component {\n  state = {\n    activeItem: \"userDetails\",\n    addresses: [],\n    countries: [],\n    userID: null,\n    selectedAddress: null,\n    userDetails: {}\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  handleItemClick = name => {\n    this.setState({ activeItem: name }, () => {\n      this.handleFetchAddresses();\n    });\n  };\n\n  handleGetActiveItem = () => {\n    const { activeItem } = this.state;\n    if (activeItem === \"billingAddress\") {\n      return \"Billing Address\";\n    } else if (activeItem === \"shippingAddress\") {\n      return \"Shipping Address\";\n    } else if (activeItem === \"userDetails\") {\n      return \"Profile\";\n    }\n    return \"Payment History\";\n  };\n\n  handleFormatCountries = countries => {\n    const keys = Object.keys(countries);\n    return keys.map(k => {\n      return {\n        key: k,\n        text: countries[k],\n        value: k\n      };\n    });\n  };\n\n  handleDeleteAddress = addressID => {\n    authAxios\n      .delete(addressDeleteURL(addressID))\n      .then(res => {\n        this.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleSelectAddress = address => {\n    this.setState({ selectedAddress: address });\n  };\n\n  handleFetchUserID = () => {\n    authAxios\n      .get(userIDURL)\n      .then(res => {\n        this.setState({ userID: res.data.userID });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchCountries = () => {\n    authAxios\n      .get(countryListURL)\n      .then(res => {\n        this.setState({ countries: this.handleFormatCountries(res.data) });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchAddresses = () => {\n    this.setState({ loading: true });\n    const { activeItem } = this.state;\n    authAxios\n      .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\n      .then(res => {\n        this.setState({ addresses: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleCallback = () => {\n    this.handleFetchAddresses();\n    this.setState({ selectedAddress: null });\n  };\n\n  renderAddresses = () => {\n    const {\n      activeItem,\n      addresses,\n      countries,\n      selectedAddress,\n      userID\n    } = this.state;\n    return (\n      <React.Fragment>\n        <Card.Group>\n          {addresses.map(a => {\n            return (\n              <Card key={a.id}>\n                <Card.Content>\n                  {a.default && (\n                    <Label as=\"a\" color=\"blue\" ribbon=\"right\">\n                      Default\n                    </Label>\n                  )}\n                  <Card.Header>\n                    {a.street_address}, {a.apartment_address}\n                  </Card.Header>\n                  <Card.Meta>{a.country}</Card.Meta>\n                  <Card.Description>{a.zip}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Button\n                    color=\"yellow\"\n                    onClick={() => this.handleSelectAddress(a)}\n                  >\n                    Update\n                  </Button>\n                  <Button\n                    color=\"red\"\n                    onClick={() => this.handleDeleteAddress(a.id)}\n                  >\n                    Delete\n                  </Button>\n                </Card.Content>\n              </Card>\n            );\n          })}\n        </Card.Group>\n        {addresses.length > 0 ? <Divider /> : null}\n        {selectedAddress === null ? (\n          <AddressForm\n            activeItem={activeItem}\n            countries={countries}\n            formType={CREATE_FORM}\n            userID={userID}\n            callback={this.handleCallback}\n          />\n        ) : null}\n        {selectedAddress && (\n          <AddressForm\n            activeItem={activeItem}\n            userID={userID}\n            countries={countries}\n            address={selectedAddress}\n            formType={UPDATE_FORM}\n            callback={this.handleCallback}\n          />\n        )}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { activeItem, error, loading } = this.state;\n    const { isAuthenticated } = this.props;\n    if (!isAuthenticated) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <Grid container columns={2} divided>\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            {error && (\n              <Message\n                error\n                header=\"There was an error\"\n                content={JSON.stringify(error)}\n              />\n            )}\n            {loading && (\n              <Segment>\n                <Dimmer active inverted>\n                  <Loader inverted>Loading</Loader>\n                </Dimmer>\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\n              </Segment>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={6}>\n            <Menu pointing vertical fluid>\n              <Menu.Item\n                name=\"Profile\"\n                active={activeItem === \"userDetails\"}\n                onClick={() => this.handleItemClick(\"userDetails\")}\n              />\n              <Menu.Item\n                name=\"Billing Address\"\n                active={activeItem === \"billingAddress\"}\n                onClick={() => this.handleItemClick(\"billingAddress\")}\n              />\n              <Menu.Item\n                name=\"Shipping Address\"\n                active={activeItem === \"shippingAddress\"}\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\n              />\n              <Menu.Item\n                name=\"Payment history\"\n                active={activeItem === \"paymentHistory\"}\n                onClick={() => this.handleItemClick(\"paymentHistory\")}\n              />\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Header>{this.handleGetActiveItem()}</Header>\n            <Divider />\n            {activeItem === \"paymentHistory\" ? (\n              <PaymentHistory />\n            ) : activeItem === \"userDetails\" ? (\n              <UserDetails />\n            ) :\n            (\n              this.renderAddresses()\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}